/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package CaesarPackage;


import javafx.application.Application;
import javafx.collections.ObservableList;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.GridPane;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class Caesar extends Application {
    public String alfabebt="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    public String alfaBerria="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    public static Caesar nireCaesar =getNireCaesar();




    @Override
    public void start(Stage primaryStage) throws Exception {
        primaryStage.setTitle("Caesar Cifration");
        GridPane grid = new GridPane();
        Group root=new Group();
        ObservableList list= root.getChildren();

        ComboBox comboBox=new ComboBox();

        comboBox.getItems().add("Caesar");


        grid.add(comboBox,0,0);

        comboBox.setOnAction(e -> {
            if(comboBox.getValue().equals("Caesar")){
                list.remove(grid);
                caesarInterface(list);
            }
        });

        list.addAll(grid);

        Scene scene = new Scene(root,500,500);
        primaryStage.setScene(scene);
        primaryStage.show();

    }



    public void caesarInterface(ObservableList list){

        //checkobox-a sortu
        CheckBox checkBox=new CheckBox();
        Label gakoaTituluLabel=new Label("Gakoa nahi duzu?");

        //mezua idazteko sortu
        Label mezuaLabel=new Label("Mezua:");
        TextField mezuaIdazi = new TextField ();
        mezuaIdazi.setPromptText("Mezua idatzi...");

        //gakoa idazteko sortu
        Label gakoaText=new Label("Zure gakoa:");
        PasswordField sartuGakoa=new PasswordField();
        sartuGakoa.setPromptText("Sartu gakoa...");


        //botoia sortu
        Button submit=new Button();
        submit.setText("Submit");

        //problemaren emaitza
        Text emaitza=new Text("sentitzen dugu baina tontoa zara");
        emaitza.setFont(Font.font("Arial Narrow", FontWeight.BOLD,15));
        emaitza.setX(10);
        emaitza.setY(300);


        //Pantailaratuko dena add
        GridPane gridPane=new GridPane();
        gridPane.setHgap(10);
        gridPane.setVgap(10);
        gridPane.add(mezuaLabel,0,0);//column row
        gridPane.add(mezuaIdazi,1,0);
        gridPane.add(gakoaTituluLabel,0,1);
        gridPane.add(checkBox,1,1);
        gridPane.add(submit,3,3);

        //taula ikus dadin
        list.add(gridPane);

        checkBox.setOnAction(e ->{
            if(checkBox.isSelected()){
                //Elementuak sartzeko taulan
               gridPane.add(gakoaText,0,2);
               gridPane.add(sartuGakoa,1,2);
            }
            else if(!checkBox.isSelected()){
                System.out.println("kaixo");
                //elementuak ezabatzeko taulatik
                gridPane.getChildren().removeAll(gakoaText,sartuGakoa);
                // gridPane.add(new Label("si no lo borro es porque no me sale de los guebos"),0,3);
            }
        });

        submit.setOnAction(event -> {
            Caesar caesar=new Caesar();

            //lortu mezua
            String mezua=mezuaIdazi.getText();

            //aurretiaz exekutatu bada programa
            list.remove(emaitza);

            if(!mezua.equals("")){
                if(checkBox.isSelected()){
                    //lortu gakoa
                    String gakoa=sartuGakoa.getText();

                    //desordenatu alfabetoa gakoarekin
                    caesar.desordenatuGakoarekin(gakoa);

                    emaitza.setText(caesar.alfaBerria+" da zure alfabetoa.\n"+
                            caesar.zifratu(mezua)+" da zure pasahitza");
                    emaitza.setFill(Color.web("#FF0000"));
                }
                else{
                    //desordenatu alfabetoa gako gabe
                    caesar.desordenatu(caesar.alfabebt);

                    emaitza.setText(caesar.alfaBerria+" da zure alfabetoa.\n"+
                            caesar.zifratu(mezua)+" da zure pasahitza");
                    emaitza.setFill(Color.web("#FF0000"));
                }
            }
            list.add(emaitza);
        });
    }


    public static void main(String[] args){
        Application.launch(args);
    }


    //Singleton patroia
    public static synchronized Caesar getNireCaesar(){
        if(nireCaesar ==null){
            nireCaesar =new Caesar();
        }
        return nireCaesar;
    }


    public void desordenatuGakoarekin(String gakoa){
        String emaitza = "";
        gakoa=gakoa.toUpperCase();
        gakoa=gakoa.replace(" ","");


        //Lortu gakoaren letra ez errepikatuak
        emaitza=hitzaSortu(gakoa,emaitza);

        //Lortu beste letra guztiak
        emaitza=hitzaSortu(alfabebt,emaitza);

        alfaBerria=emaitza;
    }


    private String hitzaSortu(String gakoa,String emaitza){
        for(int i=0;i<gakoa.length();i++){
            char lag=gakoa.charAt(i);
            boolean bool=false;
            int a=0;

            while(!bool && a<emaitza.length()){
                char unekoa=emaitza.charAt(a);
                if(unekoa==lag){
                    bool=true;
                }
                a++;
            }

            if (!bool) emaitza=emaitza+lag;
        }
        return emaitza;
    }


    public void desordenatu(String aldatzeko){
        char[] lista=aldatzeko.toCharArray();
        lista=fisherYates(lista);

        String emaitza="";
        for (int i = 0; lista.length > i; i++){
            emaitza=emaitza+lista[i];
        }

        alfaBerria=emaitza;
    }

    //Fisher-Yates shuffle eraginkorra da lista txikiak desordenatzeko, gure kasuan 26 elementuko lista da
    private char[] fisherYates(char[] lista){
        for (int i=0;i<lista.length;i++){
            int auzaz=(int)(Math.random()*25+1);
            swap(lista,i,auzaz);
        }
        return lista;
    }

    private void swap(char[] lista, int a, int b){
        char lag=lista[a];
        lista[a]=lista[b];
        lista[b]=lag;
    }

   public String zifratu(String mezua){
        mezua=mezua.toUpperCase();
        char[] lista=mezua.toCharArray();
        String emaitza="";

        for (int i=0;i<lista.length;i++){
            char lag=lista[i];

            //unekoa ez bada zuriune bat ikusi
            if(lag!=' '){
                int unekoa=alfabebt.indexOf(lista[i]);
                emaitza = emaitza + alfaBerria.charAt(unekoa);
            }
            else{
                emaitza=emaitza+" ";
            }
        }
        return emaitza;
    }

    public String deszifratu(String kripto){
        kripto=kripto.toUpperCase();
        char[] lista=kripto.toCharArray();
        String emaitza="";

        for (int i=0;i<lista.length;i++){
            char lag=lista[i];

            if(lag!=' '){
                int unekoa=alfaBerria.indexOf(lista[i]);
                emaitza=emaitza+alfabebt.charAt(unekoa);
            }
            else{
                emaitza=emaitza+" ";
            }
        }
        return emaitza;
    }

}
