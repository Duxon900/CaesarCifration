/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package CaesarPackage;

import java.util.Scanner;

public class App {
    public static String alfabebt="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    public static String alfaBerria="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    private static App nireApp=null;

    public static void main(String args[]){

        nireApp=new App();

        Scanner sc= new Scanner(System.in);
        alfaBerria=nireApp.desordenatu(alfabebt);
        System.out.println(alfaBerria+" da zure alfabetua");
        String mezuGarbia="Mezu hau zifratuko da";


        String kriptograma=nireApp.caesarZifratu(mezuGarbia);
        System.out.println(kriptograma);

        System.out.println("####################################");

        kriptograma=nireApp.caesarDezifratu(kriptograma);
        System.out.println(kriptograma);

}

    private String desordenatu(String aldatzeko){
        char[] lista=aldatzeko.toCharArray();
        lista=fisherYates(lista);

        String emaitza="";
        for (int i=0;i<lista.length;i++){
            emaitza=emaitza+lista[i];
        }

        return emaitza;
    }
    //Fisher-Yates shuffle eraginkorra da lista txikiak desordenatzeko, gure kasuan 26 elementuko lista da
    private char[] fisherYates(char[] lista){
        for (int i=0;i<lista.length;i++){
            int auzaz=(int)(Math.random()*25+1);
            swap(lista,i,auzaz);
        }
        return lista;
    }

    private void swap(char[] lista, int a, int b){
        char lag=lista[a];
        lista[a]=lista[b];
        lista[b]=lag;
    }

   public String caesarZifratu(String prozesuan){
        prozesuan=prozesuan.toUpperCase();
        char[] lista=prozesuan.toCharArray();
        String emaitza="";

        for (int i=0;i<lista.length;i++){
            char lag=lista[i];

            if(lag!=' '){
                int unekoa=alfabebt.indexOf(lista[i]);
                System.out.println(unekoa);
                emaitza=emaitza+alfaBerria.charAt(unekoa);
            }
            else{
                emaitza=emaitza+" ";
            }
        }
        return emaitza;
    }

    public String caesarDezifratu(String prozesuan){
        prozesuan=prozesuan.toUpperCase();
        char[] lista=prozesuan.toCharArray();
        String emaitza="";

        for (int i=0;i<lista.length;i++){
            char lag=lista[i];

            if(lag!=' '){
                int unekoa=alfaBerria.indexOf(lista[i]);
                System.out.println(unekoa);
                emaitza=emaitza+alfabebt.charAt(unekoa);
            }
            else{
                emaitza=emaitza+" ";
            }
        }
        return emaitza;
    }

}
